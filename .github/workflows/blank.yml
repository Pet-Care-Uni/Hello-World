# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  redocly_linter:
    runs-on: ubuntu-latest
    container: node:latest
    if: contains(github.event.head_commit.message, 'redocly_linter')
    permissions:
      contents: write
    env:
      APIQ_GITHUB_URL: ${{ secrets.APIQ_GITHUB_URL }}
      CI_JOB_TOKEN: ${{ secrets.CI_JOB_TOKEN }}
      GITLAB_USER_EMAIL: ${{ secrets.GITLAB_USER_EMAIL }}
      GITLAB_USER_NAME: ${{ secrets.GITLAB_USER_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Load pipeline properties
        run: . pipeline.properties
        shell: bash

      - name: Set Git Safe Directory
        run: git config --global --add safe.directory $(pwd)

      - name: Configure Git
        run: |
          git config --global user.email "${GITLAB_USER_EMAIL}"
          git config --global user.name "${GITLAB_USER_NAME}"
          git checkout -f ${{ github.ref_name }} || git checkout -b ${{ github.ref_name }}
          git pull

      - name: Install Redocly CLI
        run: npm install @redocly/cli -g

      - name: Run Redocly Linter
        run: |
          mkdir -p auto-generated/redocly
          redocly lint $APIQ_API_FILENAME --format checkstyle > auto-generated/redocly/redocly_report.xml || LINT_EXIT_CODE=$?
          git add .
          if git diff-index --quiet HEAD --; then 
            echo "No changes to commit."
          else
            git commit -m "Generate redocly linter report"
            git push https://x-access-token:${{ secrets.CI_JOB_TOKEN }}@${{ secrets.APIQ_GITHUB_URL }}/${{ github.repository }}.git -o ci.skip
          fi
          exit $LINT_EXIT_CODE
  openapi_diffs:
      runs-on: ubuntu-latest
      container: 
        image: openapitools/openapi-diff:2.0.1
        options: --entrypoint ""
      if: contains(github.event.head_commit.message, 'openapi_diffs')  # Equivalente a `only: variables`

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Load Pipeline Properties
          shell: bash
          run: |
            if [ -f pipeline.properties ]; then
              . pipeline.properties
            else
              echo "pipeline.properties not found"
            fi

        - name: Install Git
          run: |
            apt-get update -qq
            apt-get install -qq git

        - name: Set Variables
          run: |
            BASE_FILENAME="${APIQ_API_FILENAME/.yaml/}"
            echo "BASE_FILENAME=$BASE_FILENAME" >> $GITHUB_ENV

        - name: Get Last Commit Hash
          run: |
            if [ "$(git rev-list --count HEAD)" -gt 1 ]; then
                echo "LAST_COMMIT=$(git rev-parse HEAD~1)" >> $GITHUB_ENV
            else
                echo "No previous version detected."
                exit 0
            fi

        - name: Get Current and Previous OpenAPI Files
          run: |
            git show HEAD:./${APIQ_API_FILENAME} > ${APIQ_API_FILENAME}
            git show $LAST_COMMIT:./${APIQ_API_FILENAME} > ${BASE_FILENAME}_old.yaml

        - name: Run OpenAPI Diff
          run: |
            java -jar /app/openapi-diff.jar ${BASE_FILENAME}_old.yaml ${APIQ_API_FILENAME} \
              --fail-on-incompatible --error --info --html diffs-report.html
